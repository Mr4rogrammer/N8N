{
  "name": "Pavi Daily Reminder",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 1
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2060,
        240
      ],
      "id": "36e91642-01f8-4fdf-95a8-fed19cca49a8",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appPB1OKHCOGmahGW",
          "mode": "list",
          "cachedResultName": "Daily Routine Notification App",
          "cachedResultUrl": "https://airtable.com/appPB1OKHCOGmahGW"
        },
        "table": {
          "__rl": true,
          "value": "tblPGd0MiAgeY5cag",
          "mode": "list",
          "cachedResultName": "Daily Routines",
          "cachedResultUrl": "https://airtable.com/appPB1OKHCOGmahGW/tblPGd0MiAgeY5cag"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -1400,
        220
      ],
      "id": "dc11a2ec-50c4-4b09-8987-b516357078a0",
      "name": "Fetch Records",
      "executeOnce": true,
      "credentials": {
        "airtableTokenApi": {
          "id": "5wLfpLqJVza48dj4",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "7779820575",
        "text": "=Hey *Pavi Kutty* 🐰\n\n*{{ $('Loop Over Items').item.json['Routine Name'] }};*\n`{{ $('Loop Over Items').item.json['Routine Summary'] }}`\n\nWith Love,\n{{ $json.Quote }}\nBy _Your Husband_ {{ $json.Emoji }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        0,
        600
      ],
      "id": "57cf3f23-d73e-4144-82b2-b6c14b903d78",
      "name": "pavi",
      "webhookId": "656593be-1550-4fd8-82b1-3ed4c83887cf",
      "credentials": {
        "telegramApi": {
          "id": "BpCvMqZsMEqsANJ7",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -860,
        220
      ],
      "id": "e8f7d8cb-9665-43b9-9191-fbc7f7050b5f",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "function getAsiaTime(timezone = 'Asia/Kolkata') {\n    const now = new Date();\n    const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        day: '2-digit',\n        month: '2-digit',\n        timeZone: timezone\n    };\n    \n    const formatter = new Intl.DateTimeFormat('en-US', options);\n    const parts = formatter.formatToParts(now);\n\n    const hh = parts.find(p => p.type === 'hour').value;\n    const mm = parts.find(p => p.type === 'minute').value;\n    const ampm = parts.find(p => p.type === 'dayPeriod').value;\n    const date = parts.find(p => p.type === 'day').value;\n    const month = parts.find(p => p.type === 'month').value;\n\n    return { hh, mm, ampm, date, month };\n}\n\nreturn getAsiaTime()"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1600,
        220
      ],
      "id": "a25adc2f-da18-46e5-9a62-1928d165ef10",
      "name": "Get today date and time"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appSp8pgRJzAdmSGJ",
          "mode": "list",
          "cachedResultName": "Love quotes and emjio",
          "cachedResultUrl": "https://airtable.com/appSp8pgRJzAdmSGJ"
        },
        "table": {
          "__rl": true,
          "value": "tblFwlF4SJh8ps186",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://airtable.com/appSp8pgRJzAdmSGJ/tblFwlF4SJh8ps186"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -480,
        220
      ],
      "id": "f3ade224-b41e-40f7-a359-77c041c630e3",
      "name": "love quotes",
      "credentials": {
        "airtableTokenApi": {
          "id": "5wLfpLqJVza48dj4",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst randomIndex = Math.floor(Math.random() * items.length);\nreturn [items[randomIndex]];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        220
      ],
      "id": "3bce1b84-599c-487a-9bd3-383e7d587387",
      "name": "random love quotes"
    },
    {
      "parameters": {
        "jsCode": "let TodayDD = $('Get today date and time').first().json.date\n\nlet ThisMonth = $('Get today date and time').first().json.month\n\nlet currentHr = $('Schedule Trigger').first().json.Hour\n\nlet resultValue = [];\n\n\nconst loveEmojis = [\n    \"❤️\", \"💖\", \"💘\", \"💝\", \"💗\", \"💓\", \"💞\", \"💕\", \"💌\", \"💋\",\n    \"😍\", \"😘\", \"🥰\", \"💏\", \"💑\", \"💍\", \"👩‍❤️‍👨\", \"👩‍❤️‍👩\", \"👨‍❤️‍👨\", \"💬\"\n];\n\n// Function to get a random love emoji from the list\nfunction getRandomLoveEmoji() {\n    const randomIndex = Math.floor(Math.random() * loveEmojis.length);\n    return loveEmojis[randomIndex];\n}\n\n\nfunction getRandomFromString(inputString) {\n    const items = inputString.split('|');\n    const randomIndex = Math.floor(Math.random() * items.length);\n    return items[randomIndex].trim();\n}\n\nfor (const item of $input.all()) {\n  item.json[\"Routine Summary\"] = getRandomFromString(item.json[\"Routine Summary\"]) +\" \" +getRandomLoveEmoji()\n    if(\"Date\" in item.json) {\n      const [year, month, day] = item.json.Date.split(\"-\");\n      if (month == ThisMonth && day == TodayDD && item.json.Hour.includes(currentHr)) {\n        resultValue.push(item)\n      }\n    } else if (item.json.Hour.includes(currentHr)) {\n      resultValue.push(item)\n    }\n  \n}\n\nreturn resultValue\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1160,
        220
      ],
      "id": "38439b24-292c-4c18-a6ce-50c4036b5284",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "let TodayDD = $('Get today date and time').first().json.date\n\nlet ThisMonth = $('Get today date and time').first().json.month\n\nlet currentHr = $('Schedule Trigger').first().json.Hour\n\nlet resultValue = [];\n\nlet items = $('Fetch Records').all()\n\nfor (const item of items) {\n    if(\"Date\" in item.json) {\n      const [year, month, day] = item.json.Date.split(\"-\");\n      if (month == ThisMonth && day == TodayDD && item.json.Hour.includes(currentHr)) {\n        resultValue.push(item)\n      }\n    } \n  \n}\n\nreturn resultValue\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -520,
        20
      ],
      "id": "4d12f0b2-2c5c-4b3e-9d10-88b58cd9d595",
      "name": "remove completed events"
    },
    {
      "parameters": {
        "chatId": "1199262493",
        "text": "=*SuccessFully delete the event.\n*\n_{{ $('remove completed events').item.json['Routine Name'] }}_",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "be4c1ac9-c70c-4427-99c1-21ec4b78a5d2",
      "name": "Krishna",
      "webhookId": "656593be-1550-4fd8-82b1-3ed4c83887cf",
      "credentials": {
        "telegramApi": {
          "id": "BpCvMqZsMEqsANJ7",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "1199262493",
        "text": "=Reminder of   *{{ $('Loop Over Items').item.json['Routine Name'] }}*   has been successfully sent to pavi.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        0,
        220
      ],
      "id": "dcde1e7d-e190-47e4-9cf4-08b4bd164331",
      "name": "Krishna1",
      "webhookId": "656593be-1550-4fd8-82b1-3ed4c83887cf",
      "credentials": {
        "telegramApi": {
          "id": "BpCvMqZsMEqsANJ7",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteRecord",
        "base": {
          "__rl": true,
          "value": "appPB1OKHCOGmahGW",
          "mode": "list",
          "cachedResultName": "Daily Routine Notification App",
          "cachedResultUrl": "https://airtable.com/appPB1OKHCOGmahGW"
        },
        "table": {
          "__rl": true,
          "value": "tblPGd0MiAgeY5cag",
          "mode": "list",
          "cachedResultName": "Daily Routines",
          "cachedResultUrl": "https://airtable.com/appPB1OKHCOGmahGW/tblPGd0MiAgeY5cag"
        },
        "id": "={{ $json.id }}"
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -300,
        20
      ],
      "id": "c9d41ed9-1814-49e5-8eda-3b9949322d63",
      "name": "delete the completed even from db",
      "credentials": {
        "airtableTokenApi": {
          "id": "5wLfpLqJVza48dj4",
          "name": "Airtable Personal Access Token account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn [];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -660,
        220
      ],
      "id": "0f4853a4-2238-491e-a584-ce038cccb4e0",
      "name": "Code1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9c86ef86-904e-4698-bdc7-c3ecfdc79f5d",
              "leftValue": "={{ $json.Minute }}",
              "rightValue": "01",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1840,
        240
      ],
      "id": "3e515675-5738-4551-a809-8c1989d76e99",
      "name": "If"
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Records": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "remove completed events",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "love quotes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pavi": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "love quotes": {
      "main": [
        [
          {
            "node": "random love quotes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "random love quotes": {
      "main": [
        [
          {
            "node": "Krishna1",
            "type": "main",
            "index": 0
          },
          {
            "node": "pavi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get today date and time": {
      "main": [
        [
          {
            "node": "Fetch Records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "remove completed events": {
      "main": [
        [
          {
            "node": "delete the completed even from db",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete the completed even from db": {
      "main": [
        [
          {
            "node": "Krishna",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get today date and time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": -1
  },
  "versionId": "fd4217ca-b7b0-4f4b-8f84-82a4c5968c3d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b1056d280d49dbe9f682e47cdae4772f57df748b030e6972f2e4dd1995f74900"
  },
  "id": "a4rfsbaqMsQCXw71",
  "tags": []
}