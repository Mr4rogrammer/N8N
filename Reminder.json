{
  "name": "Reminder",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 1
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1780,
        820
      ],
      "id": "afb43f0c-9066-4d57-b72c-493d55ef03b0",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "chatId": "7779820575",
        "text": "=Hey *Pavi Kutty* 🐰\n\n*{{ $('Loop Over Items').item.json['Routine Name'] }};*\n`{{ $('Loop Over Items').item.json['Routine Summary'] }}`\n\nWith Love,\n{{ $json.Quote }}\nBy _Your Husband_ {{ $json.Emoji }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        820,
        300
      ],
      "id": "066da1ff-f3d9-4f0a-ac74-531af01861d6",
      "name": "pavi",
      "webhookId": "656593be-1550-4fd8-82b1-3ed4c83887cf",
      "credentials": {
        "telegramApi": {
          "id": "NYvdQJWayGwwFD3c",
          "name": "Reminder Bot"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -220,
        40
      ],
      "id": "620d6380-78c4-41e2-a2fe-848a85fffad3",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst randomIndex = Math.floor(Math.random() * items.length);\nreturn [items[randomIndex]];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        40
      ],
      "id": "b1c00c6a-d0a3-4206-b951-5539cba89572",
      "name": "random love quotes"
    },
    {
      "parameters": {
        "jsCode": "\n\nlet currentHr = $('Schedule Trigger').first().json.Hour\n\nlet resultValue = [];\n\n\nconst loveEmojis = [\n    \"❤️\", \"💖\", \"💘\", \"💝\", \"💗\", \"💓\", \"💞\", \"💕\", \"💌\", \"💋\",\n    \"😍\", \"😘\", \"🥰\", \"💏\", \"💑\", \"💍\", \"👩‍❤️‍👨\", \"👩‍❤️‍👩\", \"👨‍❤️‍👨\", \"💬\"\n];\n\n// Function to get a random love emoji from the list\nfunction getRandomLoveEmoji() {\n    const randomIndex = Math.floor(Math.random() * loveEmojis.length);\n    return loveEmojis[randomIndex];\n}\n\n\nfunction getRandomFromString(inputString) {\n    const items = inputString.split('|');\n    const randomIndex = Math.floor(Math.random() * items.length);\n    return items[randomIndex].trim();\n}\n\nfunction parseInput(input) {\n  if (typeof input === \"string\") {\n    return input.split(',').map(Number);\n  } else if (typeof input === \"number\") {\n    return [input];\n  }\n  return [];\n}\n\nfor (const item of $('Fetch Records').all()) {\n  item.json[\"Routine Summary\"] = getRandomFromString(item.json[\"Routine Summary\"]) +\" \" +getRandomLoveEmoji()\n  let hours = item.json.Hour\n      console.log(parseInput(hours))\n    if(hours.includes(currentHr)) {\n      resultValue.push(item)\n    }\n  \n}\n\nreturn resultValue\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -880,
        800
      ],
      "id": "2ca0410e-de0d-4b8d-b03b-ceda43e8cd7b",
      "name": "Code",
      "executeOnce": true,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9c86ef86-904e-4698-bdc7-c3ecfdc79f5d",
              "leftValue": "={{ $json.Minute }}",
              "rightValue": "01",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1560,
        820
      ],
      "id": "ae6087d6-6f5e-4aaf-b746-56b435ed77d9",
      "name": "If"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -260,
        1500
      ],
      "id": "9c8e2512-f6b6-4f85-a702-18ac568e2714",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "chatId": "1199262493",
        "text": "=Hey *Bro*\n\n*{{ $json['Routine Name'] }};*\n\n`{{ $json['Routine Summary'] }}`",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        640,
        1500
      ],
      "id": "73d13620-c0a5-4e0c-94f2-a926676d1c3f",
      "name": "Krishna",
      "webhookId": "656593be-1550-4fd8-82b1-3ed4c83887cf",
      "credentials": {
        "telegramApi": {
          "id": "NYvdQJWayGwwFD3c",
          "name": "Reminder Bot"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7e652fb9-9dc1-45f2-b4d8-7524725e94c6",
              "leftValue": "={{ $json['To Whom'] }}",
              "rightValue": "Pavi",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        100,
        60
      ],
      "id": "ec7eab74-2a6a-4b68-b792-e13919d04afc",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d7049030-f1b5-4a9c-93a2-134e7f12f0bc",
              "leftValue": "={{ $json['To Whom'] }}",
              "rightValue": "Krishna",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        180,
        1500
      ],
      "id": "b9ca5d03-37b7-4bf5-9027-ceb4fd025a41",
      "name": "If2"
    },
    {
      "parameters": {
        "content": "",
        "height": 340,
        "width": 1160,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1860,
        700
      ],
      "id": "8861e316-a5b0-44bb-93f3-6da1ecd5d6e8",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "For Krishna\n",
        "height": 440,
        "width": 1220,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -340,
        1380
      ],
      "id": "55fd14d7-d651-4465-a2a8-ea611b18094b",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "For Pavi\n",
        "height": 780,
        "width": 1440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -380,
        -140
      ],
      "id": "41b51171-7233-456e-993e-0bb97d25c0bb",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "jsCode": "function getAsiaTime(timezone = 'Asia/Kolkata') {\n    const now = new Date();\n    const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        day: '2-digit',\n        month: '2-digit',\n        timeZone: timezone\n    };\n    \n    const formatter = new Intl.DateTimeFormat('en-US', options);\n    const parts = formatter.formatToParts(now);\n\n    const hh = parts.find(p => p.type === 'hour').value;\n    const mm = parts.find(p => p.type === 'minute').value;\n    const ampm = parts.find(p => p.type === 'dayPeriod').value;\n    const date = parts.find(p => p.type === 'day').value;\n    const month = parts.find(p => p.type === 'month').value;\n\n    return { hh, mm, ampm, date, month };\n}\n\nreturn getAsiaTime()"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1320,
        800
      ],
      "id": "d45c62c7-785f-4616-9d41-e9fd6bb6585c",
      "name": "Get today date and time"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1n7oAJwnf5uLlx6d5_OEdAP73bBRLRZaqAqrzonB0nDc",
          "mode": "list",
          "cachedResultName": "Automation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1n7oAJwnf5uLlx6d5_OEdAP73bBRLRZaqAqrzonB0nDc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1764671293,
          "mode": "list",
          "cachedResultName": "Pavi",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1n7oAJwnf5uLlx6d5_OEdAP73bBRLRZaqAqrzonB0nDc/edit#gid=1764671293"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1080,
        800
      ],
      "id": "a9a9a30d-297b-43d2-ba1c-db35d2e7cc72",
      "name": "Fetch Records",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "OOvdkJULy6xh4dvL",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1n7oAJwnf5uLlx6d5_OEdAP73bBRLRZaqAqrzonB0nDc",
          "mode": "list",
          "cachedResultName": "Automation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1n7oAJwnf5uLlx6d5_OEdAP73bBRLRZaqAqrzonB0nDc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 798247965,
          "mode": "list",
          "cachedResultName": "love quotes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1n7oAJwnf5uLlx6d5_OEdAP73bBRLRZaqAqrzonB0nDc/edit#gid=798247965"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        360,
        60
      ],
      "id": "46abca41-8330-4440-b9c6-7f9c9c94d955",
      "name": "love quotes",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "OOvdkJULy6xh4dvL",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pavi": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "random love quotes": {
      "main": [
        [
          {
            "node": "pavi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get today date and time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Krishna": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "love quotes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Krishna",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get today date and time": {
      "main": [
        [
          {
            "node": "Fetch Records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Records": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "love quotes": {
      "main": [
        [
          {
            "node": "random love quotes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "e881074c-cfc1-48cd-8a4b-0a1a93bbf288",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ee7707c1fecfcdb83b60a7259c8c501ea48739fc2145a4f83c8f691b057ce6b6"
  },
  "id": "cvRJOxSIh6PGt4OU",
  "tags": []
}